@mixin flexC {
	display: flex;
	justify-content: center;
	align-items: center;
}
@mixin flexY($args...) {
	display: flex;
	@each $arg in $args {
		@if $arg == "wh100" {
			width: 100%;
			height: 100%;
		} @else if $arg== "center" {
			justify-content: center;
			align-items: center;
		} @else if $arg == "ffcw" {
			flex-flow: column wrap;
		} @else if $arg == "ffrc" {
			flex-flow: row wrap;
		} @else if $arg == "ffcnw" {
			flex-flow: column nowrap;
		} @else if $arg == "fdc" {
			flex-direction: column;
		} @else if $arg == "fdr" {
			flex-direction: row;
		} @else if $arg == "jcc" {
			justify-content: center;
		} @else if $arg == "jcsb" {
			justify-content: space-between;
		} @else if $arg == "jcsa" {
			justify-content: space-around;
		} @else if $arg == "jcse" {
			justify-content: space-evenly;
		} @else if $arg == "jcfs" {
			justify-content: flex-start;
		} @else if $arg == "jcfe" {
			justify-content: flex-end;
		} @else if $arg == "wrap" {
			flex-wrap: wrap;
		} @else if $arg == "wraprev" {
			flex-wrap: wrap-reverse;
		} @else if $arg == "aic" {
			align-items: center;
		} @else if $arg == "aifs" {
			align-items: flex-start;
		} @else if $arg == "aife" {
			align-items: flex-end;
		} @else if $arg == "aibl" {
			align-items: baseline;
		} @else if $arg == "acfs" {
			align-content: flex-start;
		} @else if $arg == "acfe" {
			align-content: flex-end;
		} @else if $arg == "acc" {
			align-content: center;
		} @else if $arg == "acs" {
			align-content: stretch;
		} @else if $arg == "acsb" {
			align-content: space-between;
		} @else if $arg == "acsa" {
			align-content: space-around;
		} @else if $arg == "acse" {
			align-content: space-evenly;
		} @else if $arg == "acbl" {
			align-content: baseline;
		}
	}
}

@mixin flexDir($dir) {
	display: flex;
	flex-direction: $dir;
	justify-content: center;
	align-items: center;
}
@mixin flexDJC($dir: column, $jc: center, $ai: center) {
	display: flex;
	flex-direction: $dir;
	justify-content: $jc;
	align-items: $ai;
}

@mixin wh100 {
	width: 100%;
	height: 100%;
}
@mixin wh($x, $y: $x) {
	width: $x;
	height: $y;
}
@mixin card {
	position: relative;
	margin: 0;
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);
	border-radius: 20px;
	padding: 0.5em;
	overflow: hidden;
	background: white;
}
@mixin pos($top-or-bottom, $tob-value, $left-or-right, $lor-value) {
	position: absolute;
	#{$top-or-bottom}: $tob-value;
	#{$left-or-right}: $lor-value;
}
@mixin fade($type) {
	@if $type== "hide" {
		visibility: hidden;
		opacity: 0;
		transition: visibility 1s, opacity 1s;
	} @else if $type== "show" {
		visibility: visible;
		opacity: 1;
		transition: visibility 1s, opacity 1s;
	}
}
$tablet: 768;
$large: 1024;
$desktop: 1280;

@mixin tablet {
	@media only screen and (min-width: $tablet * 1px) {
		@content;
	}
}

@mixin large {
	@media only screen and (min-width: $large * 1px) {
		@content;
	}
}

@mixin desktop {
	@media only screen and (min-width: $desktop * 1px) {
		@content;
	}
}
@mixin square($size, $radius: 0) {
	@include wh($size);

	@if $radius != 0 {
		border-radius: $radius;
	}
}

@mixin xIn($args...) {
	@each $arg in $args {
		@if ($arg == "flexC") {
			@include flexC;
			// display: flex;
			// justify-content: center;
		} @else if ($arg == "card") {
			@include card;
		} @else if ($arg == "wh100") {
			@include wh100;
			// width: 100%;
			// height: 100%;
		}
	}
}
